#include <stdio.h>
#include <Windows.h>
#include <time.h>
#include <conio.h>
#include <stdlib.h>

//색갈
#ifndef __COLOR_LIST_
#define __COLOR_LIST_

enum {
	black,
	blue,
	green,
	cyan,
	red,
	purple,
	brown,
	lightgray,
	darkgray,
	lightblue,
	lightgreen,
	lightcyan,
	lightred,
	lightpurple,
	yellow,
	white,
};

#endif

//구조체
struct object {
	int food;
	int water;
	int healpack;
	int gun;
}obj;

struct character_hp {
	int a_hp;
	int b_hp;
	int c_hp;

}hp;

//함수
void init();
void gotoxy(int, int);
void setColor(int, int);
void titledraw();
int menudraw();
int fristday_random();
int secondday_random();
int thirdday_random();
int fourthday_random();
int fifthday_random();
int sixthday_random();
int seventhday_random();
int eighthday_random();
int ninthday_random();
int tenthday_random();
int eleventhday_random();
int twelfthday_random();
int thirteenthday_random();
int fourteenthday_random();
void mapdraw();
void selectdraw();
int select_chose();
int object_draw();
int object_select();
int human_select();
int explore_explain();
void infodraw();
void character_a();
void character_b();
void character_c();
int explore_object_select();
int obj_amount(struct object const *food, struct object const *water, struct object const *healpack, struct object const *gun);
int daydraw(int date);
int eat_food(struct object const *food);
int eat_water(struct object const *water);
void statedraw();
int noeat_down(struct character_hp const *all_hp);
int you_died(struct character_hp const *all_hp);
void skull(int x, int y);
void youdied_draw(int x, int y);

//메크로
//키보드 값
#define UP 72
#define DOWN 80
#define LEFT 75
#define RIGHT 77
#define SELECT 13
#define SPACEBAR 32
#define HP 3


int object_num;
int explore_num;
int explore_object;
int explore_q; //정찰 유무
int days = 0;
int days_error = 1;
int explore_now = 1;
int explore_gowithgun = 0;
extern int random_food = 0;
extern int random_water = 0;
extern int random_healpack = 0;
extern int random_gun = 0;
int random_objnumber_high = 0;
int random_objnumber_middle = 0;
int random_objnumber_low = 0;
int food_select; //식량 선택함수
int water_select;//물 선택함수
int a_foodeat = 0;
int a_watereat = 0;
int b_foodeat = 0;
int b_watereat = 0;
int c_foodeat = 0;
int c_watereat = 0;
int youdied = 1;


int main()
{
	obj.food = 6;
	obj.water = 6;
	obj.healpack = 1;
	obj.gun = 1;
	hp.a_hp = HP;
	hp.b_hp = HP;
	hp.c_hp = HP;
	init();
	while (1)
	{
		titledraw();
		int menucode = menudraw();
		if (menucode == 0) //게임시작
		{
			a_foodeat = 0;
			a_watereat = 0;
			b_foodeat = 0;
			b_watereat = 0;
			c_foodeat = 0;
			c_watereat = 0;
			days = 0;
			youdied = 1;
			hp.a_hp = HP;
			hp.b_hp = HP;
			hp.c_hp = HP;
			while (1)
			{
				srand((unsigned)time(NULL));
				random_objnumber_high = ((rand() % 4) + 2);
				random_objnumber_middle = ((rand() % 3) + 1);
				random_objnumber_low = ((rand() % 2)+1);
				system("cls");
				mapdraw();
				if (hp.a_hp > 0)
				{
					character_a();
				}
				if (hp.b_hp > 0)
				{
					character_b();
				}
				if (hp.c_hp > 0)
				{
					character_c();
				}
				if (days == 0)
				{
					gotoxy(110, 1);
					printf("1번째날");
				}
				daydraw(days);
				obj_amount(obj.food, obj.water, obj.healpack, obj.gun);
				selectdraw();
				int select = select_chose();
				if (select == 0) //정찰
				{
					if (explore_now == 0) //정찰 막기!!
					{
						selectdraw();
						gotoxy(1, 24);
						printf("이미 정찰을 보냈습니다.");
						gotoxy(1, 26);
						printf("ENTER키를 눌러주세요......");
						while (1)
						{
							if (keycontrol() == SELECT)
							{
								break;
							}
						}
					}
					while (explore_now == 1)
					{
						selectdraw();
						explore_explain();
						explore_num = human_select();
						if (explore_num == 0) //여자
						{
							selectdraw();
							explore_object = explore_object_select();
							if (explore_object == 0) //총 들고 정찰
							{
								explore_q = 1;
								explore_gowithgun = 1;
								if (obj.gun < 1)
								{
									selectdraw();
									int x = 1;
									int y = 24;
									gotoxy(x, y);
									printf("총이 없습니다. ");
									gotoxy(x, y + 3);
									printf("ENTER키를 눌러주세요......");
									explore_q = 0;
									explore_gowithgun = 0;
									while (1)
									{
										if (keycontrol() == SELECT)
										{
											break;
										}
									}
								}

								if (obj.gun == 0)
								{
									obj.gun = 0;
								}
								else
								{
									obj.gun -= 1;
									explore_now = 0;
								}
								days_error = 0;
							}
							else if (explore_object == 30) //총 없이 정찰
							{
								explore_q = 1;
								explore_now = 0;
								days_error = 0;
							}
							else if (explore_object = 60) //뒤로가기
							{
								days_error = 0;
							}
						}
						else if (explore_num == 20) //남자
						{
							selectdraw();
							explore_object = explore_object_select();
							if (explore_object == 0) //총 들고 정찰
							{
								explore_q = 1;
								explore_gowithgun = 1;
								if (obj.gun < 1)
								{
									selectdraw();
									int x = 1;
									int y = 24;
									gotoxy(x, y);
									printf("총이 없습니다. ");
									gotoxy(x, y + 3);
									printf("ENTER키를 눌러주세요......");
									explore_q = 0;
									explore_gowithgun = 0;
									while (1)
									{
										if (keycontrol() == SELECT)
										{
											break;
										}
									}
								}
								if (obj.gun == 0)
								{
									obj.gun = 0;
								}
								else
								{
									obj.gun -= 1;
									explore_now = 0;
								}
								days_error = 0;
							}
							else if (explore_object == 30) //총 없이 정찰
							{
								explore_q = 1;
								explore_now = 0;
								days_error = 0;
							}
							else if (explore_object = 60) //뒤로가기
							{
								days_error = 0;
							}
						}
						else if (explore_num == 40) //아이
						{
							selectdraw();
							explore_object = explore_object_select();
							if (explore_object == 0) //총 들고 정찰
							{
								explore_q = 1;
								explore_gowithgun = 1;
								if (obj.gun < 1)
								{
									selectdraw();
									int x = 1;
									int y = 24;
									gotoxy(x, y);
									printf("총이 없습니다. ");
									gotoxy(x, y + 3);
									printf("ENTER키를 눌러주세요......");
									explore_q = 0;
									explore_gowithgun = 0;
									while (1)
									{
										if (keycontrol() == SELECT)
										{
											break;
										}
									}
								}
								if (obj.gun == 0)
								{
									obj.gun = 0;
								}
								else
								{
									obj.gun -= 1;
									explore_now = 0;
								}
								days_error = 0;
							}
							else if (explore_object == 30) //총 없이 정찰
							{
								explore_q = 1;
								explore_now = 0;
								days_error = 0;
							}
							else if (explore_object = 60) //뒤로가기
							{
								days_error = 0;
							}
						}
						else if (explore_num == 60) //돌아가기
						{

						}
					}
				}
				else if (select == 30) //캐릭터관리
				{
					selectdraw();
					object_num = object_select();
					if (object_num == 0) //식량
					{
						selectdraw();
						food_select = human_select();
						if (food_select == 0)
						{
							eat_food(obj.food);
							a_foodeat -= 1;

						}
						else if (food_select == 20)
						{
							eat_food(obj.food);
							b_foodeat -= 1;

						}
						else if (food_select == 40)
						{
							eat_food(obj.food);
							c_foodeat -= 1;
						}
						else if (food_select == 60)
						{

						}
					}
					else if (object_num == 20) //물
					{
						selectdraw();
						water_select = human_select();
						if (water_select == 0)
						{
							eat_water(obj.food);
							a_watereat -= 1;
						}
						else if (water_select == 20)
						{
							eat_water(obj.food);
							b_watereat -= 1;
						}
						else if (water_select == 40)
						{
							eat_water(obj.food);
							c_watereat -= 1;
						}
						else if (water_select == 60)
						{

						}
					}
					else if (object_num == 40) //상태창
					{
						selectdraw();
						statedraw();
						
					}
					else if (object_num == 60) //돌아가기
					{

					}

				}
				else if (select == 60) //다음날
				{
					days_error = 1;
					explore_now = 1;
					days += 1;
					a_watereat += 1;
					a_foodeat += 1;
					b_watereat += 1;
					b_foodeat += 1;
					c_watereat += 1;
					c_foodeat += 1;
					noeat_down(&hp);
					you_died(&hp);
					if (youdied == 0)
					{
						break;
					}
				}
			}
				
		}
		else if (menucode == 1) //게임설명
		{
			infodraw();
		}
		else if (menucode == 2) //종료
		{
			return 0;
		}
		system("cls");
	}
	return 0;
}


// ※game※

int keycontrol()
{
	char temp = getch();
	if (temp == '↑')
	{
		return UP;
	}
	else if (temp == '←')
	{
		return LEFT;
	}
	else if (temp == '↓')
	{
		return DOWN;
	}
	else if (temp == '→')
	{
		return RIGHT;
	}
	else if (temp == '\n')
	{
		return SELECT;
	}
}

//출력 함수
//처음 메뉴출력
int menudraw()
{
	int x = 55;
	int y = 25;
	gotoxy(x - 2, y);
	printf("> 게임시작");
	gotoxy(x, y + 1);
	printf("게임설명");
	gotoxy(x + 2, y + 2);
	printf("죵료");
	while (1)
	{
		int n = keycontrol();
		switch (n)
		{
		case UP:
		{
			if (y > 25)
			{
				gotoxy(x - 2, y);
				printf(" ");
				gotoxy(x - 2, --y);
				printf(">");
			}
			break;
		}
		case DOWN:
		{
			if (y < 27)
			{
				gotoxy(x - 2, y);
				printf(" ");
				gotoxy(x - 2, ++y);
				printf(">");
			}
			break;
		}
		case SELECT:
		{
			return y - 25;
		}
		}
	}

}
//타이틀 출력
void titledraw()
{
	printf("\n");
	printf("\n");
	printf("                 $@.  ;@@@@@@@   \n");
	printf("                ,@*   *@~-----   \n");
	printf("                !@;   @$         \n");
	printf("               ,@@   :@,         \n");
	printf("               =@*   @#          \n");
	printf("              .@@,  ~@:          \n");
	printf("               $#.  ;@-          \n");
	printf("              .@=   @@$$$$=,     \n");
	printf("              !@,  -@@@@@@@!     \n");
	printf("              @@         !@,     \n");
	printf("             ~@:         @@      8 888888888o.               .8.          `8.`8888.      ,8'    d888888o.  \n");
	printf("             ;@~        :@-      8 8888    `^888.           .888.          `8.`8888.    ,8'   .`8888:' `88.\n");
	printf("             ##         =@.      8 8888        `88.        :88888.          `8.`8888.  ,8'    8.`8888.   Y8\n");
	printf("             @$   ##   .#=       8 8888         `88       . `88888.          `8.`8888.,8'     `8.`8888.\n");
	printf("            $@   !@,   ,@!       8 8888          88      .8. `88888.          `8.`88888'       `8.`8888.\n");
	printf("            @#   $@.   #@        8 8888          88     .8`8. `88888.          `8. 8888         `8.`8888.\n");
	printf("           ~@;  ,@*    @$        8 8888         ,88    .8' `8. `88888.          `8 8888          `8.`8888. \n");
	printf("           ;@-  ~@;   ;@-        8 8888    ,o88P'    .888888888. `88888.         8 8888      `8b.  ;8.`8888\n");
	printf("           @@   @@####@@,        8 8888    ,o88P'    .888888888. `88888.         8 8888      `8b.  ;8.`8888\n");
	printf("          -@;   *@@@@@#:         8 888888888P'      .8'       `8. `88888.        8 8888       `Y8888P ,88P'\n");
}
//게임설명 출력
void infodraw()
{
	system("cls");
	printf("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                           <   게  임  설  명  >                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■            1.   방향키를 이용하여 조작합니다. (  ↑ ,  ←  , ↓ , → , ENTER  )                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■            2.   택스트 선택 방식으로 진행되는 게임이며, 주어진 구조시간인 15일 동안 무사히 생존 하는것이           ■\n");
	printf("■                 목표입니다.                                                                                        ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■            3.  생존자들은 총 3명이며 각각의 생존자들 마다 3의 HP를 가지고 있습니다.  식량 혹은 물을 섭취하지       ■\n");
	printf("■                하였을떄 HP가 감소하며 초반에 주어지는 구급상자를 통해 HP를 회복시킬 수 있습니다.                   ■\n");
	printf("■                (★모든 자원은 소모품입니다.)                                                                       ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■            4.  탐색을 통해 자원을 획득하거나 잃을 수 있으며, 돌발 상황이 발생할수도 있습니다.                      ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■            5.  그 날의 할 모든 일을 끝내면 반드시 다음날로 버튼을 선택해 주세요.                                   ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■                                                                                                                    ■\n");
	printf("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n");


	printf("\n\n\n");
	printf("뒤로 가려면 ENTER키를 눌러주시요.....\n");
	
	while (1)
	{
		
		if (keycontrol() == SELECT)
		{
			break;
		}
		else if (keycontrol() == SPACEBAR)
		{
			printf("\n\n");
			printf("팔라딘 오란에게 전해 head is dead end,now each numbers deny infomations now g ");
		}
	}
}
//물품 개수 출력
int obj_amount(struct object const *food,struct object const *water, struct object const *healpack,struct object const *gun)
{
	int x = 2;
	int y = 1;
	gotoxy(x, y);
	setColor(yellow, black);
	printf("FOOD : %d",food);
	gotoxy(x, y+1);
	setColor(lightblue, black);
	printf("WATER : %d",water);
	gotoxy(x, y+2);
	setColor(purple, black);
	printf("HEALPACK : %d", healpack);
	gotoxy(x, y + 3);
	setColor(brown, black);
	printf("GUN : %d", gun);

	setColor(white, black);
}
//맵 출력
void mapdraw()
{
	printf("┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┃                                                                                                                     ┃\n");
	printf("┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n");
}
//선택지란 출력
void selectdraw()
{
	int x = 0;
	int y = 23;
	gotoxy(x, y);
	printf("┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\n");
	gotoxy(x, y+1);
	printf("┃                                                                                                                     ┃\n");
	gotoxy(x, y+2);
	printf("┃                                                                                                                     ┃\n");
	gotoxy(x, y+3);
	printf("┃                                                                                                                     ┃\n");
	gotoxy(x, y+4);
	printf("┃                                                                                                                     ┃\n");
	gotoxy(x, y+5);
	printf("┃                                                                                                                     ┃\n");
	gotoxy(x, y+6);
	printf("┃                                                                                                                     ┃\n");
	gotoxy(x, y+7);
	printf("┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\n");
	
}
//캐릭터상태창 출력
void statedraw()
{
	int x = 2;
	int y = 24;

	//A의 상태창
	gotoxy(x, y);
	printf("A의 상태");
	if (hp.a_hp == 3)
	{
		gotoxy(x, y + 1);
		setColor(red, black);
		printf("A의 체력  :  ■■■");
	}
	else if (hp.a_hp == 2)
	{
		gotoxy(x, y + 1);
		setColor(red, black);
		printf("A의 체력  :  ■■");
	}
	else if (hp.a_hp == 1)
	{
		gotoxy(x, y + 1);
		setColor(red, black);
		printf("A의 체력  :  ■");
	}
	else if (hp.a_hp <= 0)
	{
		gotoxy(x, y + 1);
		setColor(red, black);
		printf("A의 체력  :  ");
	}

	if (a_foodeat == 0)
	{
		gotoxy(x, y + 2);
		setColor(yellow, black);
		printf("A의 포만감 : ■■■");
	}
	else if (a_foodeat == 1)
	{
		gotoxy(x, y + 2);
		setColor(yellow, black);
		printf("A의 포만감 : ■■");
	}
	else if (a_foodeat == 2)
	{
		gotoxy(x, y + 2);
		setColor(yellow, black);
		printf("A의 포만감 : ■");
	}
	else if (a_foodeat >= 3)
	{
		gotoxy(x, y + 2);
		setColor(yellow, black);
		printf("A의 포만감 : ");
	}

	if (a_watereat == 0)
	{
		gotoxy(x, y + 3);
		setColor(lightblue, black);
		printf("A의 목마름 : ■■■");
	}
	else if (a_watereat == 1)
	{
		gotoxy(x, y + 3);
		setColor(lightblue, black);
		printf("A의 목마름 : ■■");
	}
	else if (a_watereat == 2)
	{
		gotoxy(x, y + 3);
		setColor(lightblue, black);
		printf("A의 목마름 : ■");
	}
	else if (a_watereat >= 3)
	{
		gotoxy(x, y + 3);
		setColor(lightblue, black);
		printf("A의 목마름 : ");
	}

	//B의 상태창
	gotoxy(x + 25, y);
	setColor(white, black);
	printf("B의 상태");
	if (hp.b_hp == 3)
	{
		gotoxy(x + 25, y + 1);
		setColor(red, black);
		printf("B의 체력  :  ■■■");
	}
	else if (hp.b_hp == 2)
	{
		gotoxy(x + 25, y + 1);
		setColor(red, black);
		printf("B의 체력  :  ■■");
	}
	else if (hp.b_hp == 1)
	{
		gotoxy(x + 25, y + 1);
		setColor(red, black);
		printf("B의 체력  :  ■");
	}
	else if (hp.b_hp <= 0)
	{
		gotoxy(x+25, y + 1);
		setColor(red, black);
		printf("B의 체력  :  ");
	}

	if (b_foodeat == 0)
	{
		gotoxy(x + 25, y + 2);
		setColor(yellow, black);
		printf("B의 포만감 : ■■■");
	}
	else if (b_foodeat == 1)
	{
		gotoxy(x + 25, y + 2);
		setColor(yellow, black);
		printf("B의 포만감 : ■■");
	}
	else if (b_foodeat == 2)
	{
		gotoxy(x + 25, y + 2);
		setColor(yellow, black);
		printf("B의 포만감 : ■");
	}
	else if (b_foodeat >= 3)
	{
		gotoxy(x + 25, y + 2);
		setColor(yellow, black);
		printf("B의 포만감 : ");
	}

	if (b_watereat == 0)
	{
		gotoxy(x + 25, y + 3);
		setColor(lightblue, black);
		printf("B의 목마름 : ■■■");
	}
	else if (b_watereat == 1)
	{
		gotoxy(x + 25, y + 3);
		setColor(lightblue, black);
		printf("B의 목마름 : ■■");
	}
	else if (b_watereat == 2)
	{
		gotoxy(x + 25, y + 3);
		setColor(lightblue, black);
		printf("B의 목마름 : ■");
	}
	else if (b_watereat >= 3)
	{
		gotoxy(x + 25, y + 3);
		setColor(lightblue, black);
		printf("B의 목마름 : ");
	}


	//C의 상태창
	gotoxy(x + 50, y);
	setColor(white, black);
	printf("C의 상태");
	if (hp.c_hp == 3)
	{
		gotoxy(x + 50, y + 1);
		setColor(red, black);
		printf("C의 체력  :  ■■■");
	}
	else if (hp.c_hp == 2)
	{
		gotoxy(x + 50, y + 1);
		setColor(red, black);
		printf("C의 체력  :  ■■");
	}
	else if (hp.c_hp == 1)
	{
		gotoxy(x + 50, y + 1);
		setColor(red, black);
		printf("C의 체력  :  ■");
	}
	else if (hp.c_hp <= 0)
	{
		gotoxy(x+50, y + 1);
		setColor(red, black);
		printf("C의 체력  :  ");
	}

	if (c_foodeat == 0)
	{
		gotoxy(x + 50, y + 2);
		setColor(yellow, black);
		printf("C의 포만감 : ■■■");
	}
	else if (c_foodeat == 1)
	{
		gotoxy(x + 50, y + 2);
		setColor(yellow, black);
		printf("C의 포만감 : ■■");
	}
	else if (c_foodeat == 2)
	{
		gotoxy(x + 50, y + 2);
		setColor(yellow, black);
		printf("C의 포만감 : ■");
	}
	else if (c_foodeat >= 3)
	{
		gotoxy(x + 50, y + 2);
		setColor(yellow, black);
		printf("C의 포만감 : ");
	}

	if (c_watereat == 0)
	{
		gotoxy(x + 50, y + 3);
		setColor(lightblue, black);
		printf("C의 목마름 : ■■■");
	}
	else if (c_watereat == 1)
	{
		gotoxy(x + 50, y + 3);
		setColor(lightblue, black);
		printf("C의 목마름 : ■■");
	}
	else if (c_watereat == 2)
	{
		gotoxy(x + 50, y + 3);
		setColor(lightblue, black);
		printf("C의 목마름 : ■");
	}
	else if (c_watereat >= 3)
	{
		gotoxy(x + 50, y + 3);
		setColor(lightblue, black);
		printf("C의 목마름 : ");
	}
	gotoxy(x , y + 5);
	setColor(white, black);
	printf("ENTER키를 눌러주세요......");

	while (1)
	{
		if (keycontrol() == SELECT)
		{
			setColor(white, black);
			break;
		}
	}
}

//캐릭터 출력
//여자
void character_a()
{
	int x = 25;
	int y = 2;
	gotoxy(x, y);
	printf("   -(|)-   \n");
	gotoxy(x, y+1);
	printf("  /\\|||/\\\n");
	gotoxy(x, y+2);
	printf("  |-O_O-|\n");
	gotoxy(x, y+3);
	printf("  d  ^  b\n");
	gotoxy(x, y+4);
	printf("  O\\-=-/O\n");
	gotoxy(x, y+5);
	printf("    \\_/  \n");
	gotoxy(x, y+6);
	printf("  __| |__  \n");
	gotoxy(x, y+7);
	printf("/  o   o  | \n");
	gotoxy(x, y+8);
	printf("|/ __o__ \\|\n");
	gotoxy(x, y+9);
	printf("|\\ o   o /|\n");
	gotoxy(x, y+10);
	printf("||)=====( \\ \n");
	gotoxy(x, y+11);
	printf("|| o   o \\ \n");
	gotoxy(x, y+12);
	printf("((   o   | \n");
	gotoxy(x, y+13);
	printf(" | o   o |\n");
	gotoxy(x, y+14);
	printf(" |   o   | \n");
	gotoxy(x, y+15);
	printf(" | o   o | \n");
	gotoxy(x, y+16);
	printf(" |_______| \n");
	gotoxy(x, y+17);
	printf("   |_|_|  \n");
	gotoxy(x, y+18);
	printf("   /X|X\\\n");
	gotoxy(x, y+19);
	printf("  (__|__)\n");

}
//남자
void character_b()
{
	int x = 50;
	int y = 1;
	gotoxy(x, y);
	printf("    /\\\\ \\");
	gotoxy(x, y + 1);
	printf("   /     \\");
	gotoxy(x, y + 2);
	printf("   |-o-o-|");
	gotoxy(x, y + 3);
	printf("   C  V  D ");
	gotoxy(x, y + 4);
	printf("   | ___ |");
	gotoxy(x, y + 5);
	printf("    \\___/");
	gotoxy(x, y + 6);
	printf("  _/<|_|>\\_");
	gotoxy(x, y + 7);
	printf(" / |/\\_/\\| \\");
	gotoxy(x, y + 8);
	printf("| |   |\\|   |");
	gotoxy(x, y + 9);
	printf("| |  |\\|  | |");
	gotoxy(x, y + 10);
	printf("| |  |\\|  | |");
	gotoxy(x, y + 11);
	printf(" \\ \\ |\\|  | |");
	gotoxy(x, y + 12);
	printf(" (())\\_/__| |");
	gotoxy(x, y + 13);
	printf("  |   |   |_|");
	gotoxy(x, y + 14);
	printf("  |   Y   |))\\");
	gotoxy(x, y + 15);
	printf("  |   |   | ||");
	gotoxy(x, y + 16);
	printf("  |   |   | ||");
	gotoxy(x, y + 17);
	printf("  |   |   | ||");
	gotoxy(x, y + 18);
	printf("  |___|___| ||");
	gotoxy(x, y + 19);
	printf("  /qp| |qp\\ ||");
	gotoxy(x, y + 20);
	printf(" (___/ \\___)||");
}
//아이
void character_c()
{
	int x = 75;
	int y = 3;
	gotoxy(x, y);
	printf("      ////^\\\\\\\\");
	gotoxy(x, y + 1);
	printf("      | ^   ^ |");
	gotoxy(x, y + 2);
	printf("     @ (o) (o) @");
	gotoxy(x, y + 3);
	printf("      |   <   |");
	gotoxy(x, y + 4);
	printf("      |  ___  |");
	gotoxy(x, y + 5);
	printf("       \\_____/");
	gotoxy(x, y + 6);
	printf("     ____|  |____");
	gotoxy(x, y + 7);
	printf("    /    \\__/    \\");
	gotoxy(x, y + 8);
	printf("   /              \\");
	gotoxy(x, y + 9);
	printf("  /\\_/|        |\\_/\\");
	gotoxy(x, y + 10);
	printf(" / /  |        |  \\ \\");
	gotoxy(x, y + 11);
	printf(" \\ \\  |________|  / /");
	gotoxy(x, y + 12);
	printf(" (()) |        | (())");
	gotoxy(x, y + 13);
	printf("      |   ||   |");
	gotoxy(x, y + 14);
	printf("      |___||___|");
	gotoxy(x, y + 15);
	printf("       (  | (  |");
	gotoxy(x, y + 16);
	printf("       |  | |  |");
	gotoxy(x, y + 17);
	printf("       |  | |  |");
	gotoxy(x, y + 18);
	printf("   cccC__Cccc___)");
} 

int select_chose()
{
	int x = 20;
	int y = 25;
	gotoxy(x, y);
	printf("> 정찰");
	gotoxy(x + 30, y);
	printf("  캐릭터 관리");
	gotoxy(x + 60, y);
	printf("  다음날");

	while (1)
	{
		int n = keycontrol();
		switch (n)
		{
		case LEFT:
		{
			if (x > 20)
			{
				gotoxy(x, y);
				printf("  ");
				for (int i = 0; i < 30; i++)
				{
					x--;
				}
				gotoxy(x, y);
				printf(">");

			}
			break;
		}
		
		case RIGHT:
		{
			if (x < 80)
			{
				gotoxy(x, y);
				printf("  ");
				for (int i = 0; i < 30; i++)
				{
					x++;
				}
				gotoxy(x, y);
				printf(">");

			}
			break;
		}
		case SELECT:
		{
			return x - 20;
		}

		}

	}

}

int explore_explain()
{
	int x = 1;
	int y = 24;
	gotoxy(x, y);
	printf("누구를 탐험에 보내겠습니까? ");
}

int human_select()
{
		int x = 20;
		int y = 25;
		gotoxy(x, y);
		printf("> A");
		gotoxy(x + 20, y);
		printf("  B");
		gotoxy(x + 40, y);
		printf("  C");
		gotoxy(x + 60, y);
		printf("  돌아가기");



		while (1)
		{
			int n = keycontrol();
			switch (n)
			{
			case LEFT:
			{
				if (x > 20)
				{
					gotoxy(x, y);
					printf("  ");
					for (int i = 0; i < 20; i++)
					{
						x--;
					}
					gotoxy(x, y);
					printf(">");

				}
				break;
			}

			case RIGHT:
			{
				if (x < 80)
				{
					gotoxy(x, y);
					printf("  ");
					for (int i = 0; i < 20; i++)
					{
						x++;
					}
					gotoxy(x, y);
					printf(">");

				}
				break;
			}
			case SELECT:
			{
				return x - 20;
			}

			}

		}

}

int explore_object_select()
{

	{
		int x = 20;
		int y = 25;
		gotoxy(x, y);
		printf("> 총을 가져간다");
		gotoxy(x + 30, y);
		printf("  그냥 간다");
		gotoxy(x + 60, y);
		printf("  돌아가기");



		while (1)
		{
			int n = keycontrol();
			switch (n)
			{
			case LEFT:
			{
				if (x > 20)
				{
					gotoxy(x, y);
					printf("  ");
					for (int i = 0; i < 30; i++)
					{
						x--;
					}
					gotoxy(x, y);
					printf(">");

				}
				break;
			}

			case RIGHT:
			{
				if (x < 80)
				{
					gotoxy(x, y);
					printf("  ");
					for (int i = 0; i < 30; i++)
					{
						x++;
					}
					gotoxy(x, y);
					printf(">");

				}
				break;
			}
			case SELECT:
			{
				return x - 20;
			}

			}

		}

	}
}

int object_select()

{
	int x = 20;
	int y = 25;
	gotoxy(x, y);
	printf("> 식량");
	gotoxy(x + 20, y);
	printf("  물");
	gotoxy(x + 40, y);
	printf("  상태창");
	gotoxy(x + 60, y);
	printf("  돌아가기");



	while (1)
	{
		int n = keycontrol();
		switch (n)
		{
		case LEFT:
		{
			if (x > 20)
			{
				gotoxy(x, y);
				printf("  ");
				for (int i = 0; i < 20; i++)
				{
					x--;
				}
				gotoxy(x, y);
				printf(">");

			}
			break;
		}

		case RIGHT:
		{
			if (x < 80)
			{
				gotoxy(x, y);
				printf("  ");
				for (int i = 0; i < 20; i++)
				{
					x++;
				}
				gotoxy(x, y);
				printf(">");

			}
			break;
		}
		case SELECT:
		{
			return x - 20;
		}

		}

	}

}

int object_draw()
{
	int x = 1;
	int y = 1;
	gotoxy(x, y);
	
}

void skull(int x, int y)
{
	gotoxy(x, y);
	printf("             ..ooo@@@XXX%%%%%%xx..");
	gotoxy(x, y + 1);
	printf("          .oo@@XXX%%x%%xxx..     ` .");
	gotoxy(x, y + 2);
	printf("        .o@XX%%%%xx..               ` .");
	gotoxy(x, y + 3);
	printf("      o@X%%..                  ..ooooooo");
	gotoxy(x, y + 4);
	printf("    .@X%%x.                 ..o@@^^   ^^@@o");
	gotoxy(x, y + 5);
	printf("  .ooo@@@@@@ooo..      ..o@@^          @X%");
	gotoxy(x, y + 6);
	printf("  o@@^^^     ^^^@@@ooo.oo@@^             %");
	gotoxy(x, y + 7);
	printf(" xzI    -*--      ^^^o^^        --*-     %");
	gotoxy(x, y + 8);
	printf(" @@@o     ooooooo^@@^o^@X^@oooooo     .X%%x");
	gotoxy(x, y + 9);
	printf("I@@@@@@@@@XX%%xx  ( o@o )X%%x@ROMBASED@@@X%%x");
	gotoxy(x, y + 10);
	printf("I@@@@XX%%%%xx  oo@@@@X%% @@X%%x   ^^^@@@@@@@X%%x");
	gotoxy(x, y + 11);
	printf(" @X%%xx     o@@@@@@@X%% @@XX%%%%x  )    ^^@X%%x");
	gotoxy(x, y + 12);
	printf("  ^   xx o@@@@@@@@Xx  ^ @XX%%%%x    xxx");
	gotoxy(x, y + 13);
	printf("        o@@^^^ooo I^^ I^o ooo   .  x");
	gotoxy(x, y + 14);
	printf("        oo @^ IX      I   ^X  @^ oo");
	gotoxy(x, y + 15);
	printf("        IX     U  .        V     IX");
	gotoxy(x, y + 16);
	printf("         V     .           .     V");
}

void youdied_draw(int x, int y)
{
	gotoxy(x, y + 8);
	printf("__   __ _____  _   _  ______  _____  _____ ______");
	gotoxy(x, y + 9);
	printf("\\ \\ / /|  _  || | | | |  _  \\|_   _||  ___||  _  \\");
	gotoxy(x, y + 10);
	printf(" \\ V / | | | || | | | | | | |  | |  | |__  | | | |");
	gotoxy(x, y + 11);
	printf("  \\ /  | | | || | | | | | | |  | |  |  __| | | | |");
	gotoxy(x, y + 12);
	printf("  | |  \\ \\_/ /| |_| | | |/ /  _| |_ | |___ | |/ /");
	gotoxy(x, y + 13);
	printf("  \\_/   \\___/  \\___/  |___/   \\___/ \\____/ |___/");
}


//물량감소

//식량
int eat_food(food)
{
	return obj.food -= 1;
}

int eat_water(water)
{
	return obj.water -= 1;
}
//hp설정
int noeat_down(struct character_hp *all_hp)
{
	//a의 포만감,목마름에 따른 체력 관리
	if (a_watereat >= 3 && a_watereat <= 5)
	{
		all_hp->a_hp -= 1;
	}
	if (a_foodeat >= 3 && a_foodeat <= 5)
	{
		all_hp->a_hp -= 1;
	}
	if (all_hp->a_hp <= 0)
	{
		all_hp->a_hp = 0;
	}
	if (a_watereat < 0)//물의 음수값x
	{
		a_watereat = 0;
	}
	if (a_foodeat < 0)//식량의 음수값x
	{
		a_foodeat = 0;
	}

	//b의 포만감,목마름에 따른 체력 관리
	if (b_watereat >= 3 && b_watereat <= 5)
	{
		all_hp->b_hp -= 1;
	}
	if (b_foodeat >= 3 && b_foodeat <= 5)
	{
		all_hp->b_hp -= 1;
	}
	if (all_hp->b_hp <= 0)
	{
		all_hp->b_hp = 0;
	}
	if (b_watereat < 0)//물의 음수값x
	{
		b_watereat = 0;
	}
	if (b_foodeat < 0)//식량의 음수값x
	{
		b_foodeat = 0;
	}

	//c의 포만감,목마름에 따른 체력 관리
	if (c_watereat >= 3 && c_watereat <= 5)
	{
		all_hp->c_hp -= 1;
	}
	if (c_foodeat >= 3 && c_foodeat <= 5)
	{
		all_hp->c_hp -= 1;
	}
	if (all_hp->c_hp <= 0)
	{
		all_hp->c_hp = 0;
	}
	if (c_watereat < 0)//물의 음수값x
	{
		c_watereat = 0;
	}
	if (c_foodeat < 0)//식량의 음수값x
	{
		c_foodeat = 0;
	}
}
//유다희양
int you_died(struct character_hp *all_hp)
{
	if (all_hp->a_hp <= 0 && all_hp->b_hp <= 0 && all_hp->c_hp <= 0)
	{
		system("cls");
		int x = 35;
		int y = 5;
		skull(x, y);
		youdied_draw(x, y);
		youdied = 0;
		Sleep(2000);
		system("cls");
		gotoxy(35, 10);
		printf("모든 사람들이 죽었습니다.");
		gotoxy(35, 11);
		printf("ENTER키를 눌러주세요.......");
		while (1)
		{
			if (keycontrol() == SELECT)
			{
				break;
			}
		}

	}
}


//날짜 출력 및 이벤트 발생
int daydraw(int date)
{
	int x = 110;
	int y = 1;
	if (date == 1)
	{
		gotoxy(x, y);
		printf("2번째날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			fristday_random();
			days_error = 1;
		}
	}
	else if (date == 2)
	{
		gotoxy(x, y);
		printf("3번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			secondday_random();
			days_error = 1;
		}
	}
	else if (date == 3)
	{
		gotoxy(x, y);
		printf("4번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			thirdday_random();
			days_error = 1;
		}
	}
	else if (date == 4)
	{
		gotoxy(x, y);
		printf("5번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			fourthday_random();
			days_error = 1;
		}
	}
	else if (date == 5)
	{
		gotoxy(x, y);
		printf("6번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			fifthday_random();
			days_error = 1;
		}
	}
	else if (date == 6)
	{
		gotoxy(x, y);
		printf("7번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			sixthday_random();
			days_error = 1;
		}
	}
	else if (date == 7)
	{
		gotoxy(x, y);
		printf("8번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			seventhday_random();
			days_error = 1;
		}
	}
	else if (date == 8)
	{
		gotoxy(x, y);
		printf("9번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			eighthday_random();
			days_error = 1;
		}
	}
	else if (date == 9)
	{
		gotoxy(x, y);
		printf("10번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			ninthday_random();
			days_error = 1;
		}
	}
	else if (date == 10)
	{
		gotoxy(x, y);
		printf("11번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			tenthday_random();
			days_error = 1;
		}
	}
	else if (date == 11)
	{
		gotoxy(x, y);
		printf("12번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			eleventhday_random();
			days_error = 1;
		}
	}
	else if (date == 12)
	{
		gotoxy(x, y);
		printf("13번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			twelfthday_random();
			days_error = 1;
		}
	}
	else if (date == 13)
	{
		gotoxy(x, y);
		printf("14번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			thirteenthday_random();
			days_error = 1;
		}
	}
	else if (date == 14)
	{
		gotoxy(x, y);
		printf("15번쨰날");
		if (days_error == 0)
		{
			days_error = 0;
		}
		if (explore_q == 1 && days_error == 1)
		{
			explore_q = 0;
			fourteenthday_random();
			days_error = 1;
		}
	}
}

// 랜덤 인카운터
//첫쨰날
int fristday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 70)
		{
			obj.food += 1;
		}
		if (random_water > 60 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 1)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 80)
		{
			obj.gun += random_objnumber_middle;
		}
	}
	else if(explore_gowithgun == 0) //총X
	{
		if (random_food > 90)
		{
			obj.food += 1;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 30)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}
//둘쨰날
int secondday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 70)
		{
			obj.food += 1;
		}
		if (random_water > 50 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 50)
		{
			obj.healpack += random_objnumber_low;
		}
		if (random_gun >= 30 && random_gun <= 80)
		{
			obj.gun += random_objnumber_middle;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 80)
		{
			obj.food += random_objnumber_low;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 30 && random_healpack <= 40)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}
//셋째날
int thirdday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 65)
		{
			obj.food += 1;
		}
		if (random_water > 50 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 50)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 75)
		{
			obj.gun += random_objnumber_low;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 90)
		{
			obj.food += 1;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 30)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_middle;
		}
	}
}
//넷째날
int fourthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 60)
		{
			obj.food += 1;
		}
		if (random_water > 50 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 20 && random_healpack <= 60)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 75)
		{
			obj.gun += random_objnumber_middle;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 90)
		{
			obj.food += 1;
		}
		if (random_water > 60 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 50)
		{
			obj.healpack += random_objnumber_low;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_middle;
		}
	}
}
//다섯쨰날
int fifthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 50)
		{
			obj.food += 1;
		}
		if (random_water > 30 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 20)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 60)
		{
			obj.gun += random_objnumber_low;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 80)
		{
			obj.food += 1;
		}
		if (random_water > 60 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 20)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 10 && random_gun <= 40)
		{
			obj.gun += random_objnumber_low;
		}
	}
}
//여섯째날
int sixthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 60)
		{
			obj.food += 1;
		}
		if (random_water > 40 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 70)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 50 && random_gun <= 80)
		{
			obj.gun += random_objnumber_low;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 90)
		{
			obj.food += 1;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 30)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}
//일곱째날
int seventhday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 55)
		{
			obj.food += 1;
		}
		if (random_water > 40 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 70)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 50 && random_gun <= 80)
		{
			obj.gun += random_objnumber_middle;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 90)
		{
			obj.food += 1;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 30)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}
//여덟째날
int eighthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 55)
		{
			obj.food += 1;
		}
		if (random_water > 40 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 70)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 50 && random_gun <= 80)
		{
			obj.gun += random_objnumber_low;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 90)
		{
			obj.food += 1;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 30)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}
//아홉째날
int ninthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 50)
		{
			obj.food += 1;
		}
		if (random_water > 40 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 70)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 50 && random_gun <= 80)
		{
			obj.gun += random_objnumber_low;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 90)
		{
			obj.food += 1;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 30)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_middle;
		}
	}
}
//열번째날
int tenthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 50)
		{
			obj.food += 1;
		}
		if (random_water > 30 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 60)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 50 && random_gun <= 80)
		{
			obj.gun += random_objnumber_middle;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 70)
		{
			obj.food += 1;
		}
		if (random_water > 50 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 50)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}
//열한번째날
int eleventhday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 40)
		{
			obj.food += 1;
		}
		if (random_water > 20 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 50)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 60 && random_gun <= 80)
		{
			obj.gun += random_objnumber_high;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 70)
		{
			obj.food += 1;
		}
		if (random_water > 50 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 50)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}
//열두번째날
int twelfthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 80)
		{
			obj.food += 1;
		}
		if (random_water > 60 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 90)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 60 && random_gun <= 80)
		{
			obj.gun += random_objnumber_middle;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 95)
		{
			obj.food += 1;
		}
		if (random_water > 75 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 80)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}
//열세번째날
int thirteenthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 40)
		{
			obj.food += 1;
		}
		if (random_water > 20 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 80)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 60 && random_gun <= 80)
		{
			obj.gun += random_objnumber_middle;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 70)
		{
			obj.food += 1;
		}
		if (random_water > 50 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 50)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_low;
		}
	}
}
//열네번째날
int fourteenthday_random()
{
	srand((unsigned)time(NULL));

	random_food = (rand() % 100) + 1;
	random_water = (rand() % 100) + 1;
	random_healpack = (rand() % 100) + 1;
	random_gun = (rand() % 100) + 1;

	if (explore_gowithgun == 1) //총O
	{
		if (random_food > 80)
		{
			obj.food += 1;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 80)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 60 && random_gun <= 80)
		{
			obj.gun += random_objnumber_high;
		}
	}
	else if (explore_gowithgun == 0) //총X
	{
		if (random_food > 90)
		{
			obj.food += 1;
		}
		if (random_water > 70 && random_water < 80)
		{
			obj.water += 1;
		}
		if (random_healpack >= 80)
		{
			obj.healpack += 1;
		}
		if (random_gun >= 30 && random_gun <= 40)
		{
			obj.gun += random_objnumber_high;
		}
	}
}


//utile
void init()
{
	system("mode con cols=120 lines=35 | title 게임 제목");

	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_CURSOR_INFO ConsoleCursor;
	ConsoleCursor.bVisible = 0;
	ConsoleCursor.dwSize = 1;
	SetConsoleCursorInfo(consoleHandle, &ConsoleCursor);

}

void gotoxy(int x, int y)
{
	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD pos;
	pos.X = x;
	pos.Y = y;
	SetConsoleCursorPosition(consoleHandle, pos);
}

void setColor(int forground, int background)
{
	HANDLE consolHandle = GetStdHandle(STD_OUTPUT_HANDLE);
	int code = forground + background * 16;
	SetConsoleTextAttribute(consolHandle, code);
}
